package org.pojos;
// Generated Feb 6, 2017 5:18:07 PM by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Actions generated by hbm2java
 */
@Entity
@Table(name = "actions", schema = "public"
)
public class Actions implements java.io.Serializable {

    private int id;
    private ActionTypes actionTypes;
    private Clients clientsByClientId;
    private Clients clientsByOrgId;
    private String actionTitle;
    private Date activeFrom;
    private String uom;
    private Short actionStatus;
    private ActionsTrans actionsTrans;

    public Actions() {
    }

    public Actions(int id, ActionTypes actionTypes, String actionTitle) {
        this.id = id;
        this.actionTypes = actionTypes;
        this.actionTitle = actionTitle;
    }

    public Actions(int id, ActionTypes actionTypes, Clients clientsByClientId, Clients clientsByOrgId, String actionTitle, Date activeFrom, String uom, Short actionStatus, ActionsTrans actionsTrans) {
        this.id = id;
        this.actionTypes = actionTypes;
        this.clientsByClientId = clientsByClientId;
        this.clientsByOrgId = clientsByOrgId;
        this.actionTitle = actionTitle;
        this.activeFrom = activeFrom;
        this.uom = uom;
        this.actionStatus = actionStatus;
        this.actionsTrans = actionsTrans;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "action_type", nullable = false)
    public ActionTypes getActionTypes() {
        return this.actionTypes;
    }

    public void setActionTypes(ActionTypes actionTypes) {
        this.actionTypes = actionTypes;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "client_id")
    public Clients getClientsByClientId() {
        return this.clientsByClientId;
    }

    public void setClientsByClientId(Clients clientsByClientId) {
        this.clientsByClientId = clientsByClientId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "org_id")
    public Clients getClientsByOrgId() {
        return this.clientsByOrgId;
    }

    public void setClientsByOrgId(Clients clientsByOrgId) {
        this.clientsByOrgId = clientsByOrgId;
    }

    @Column(name = "action_title", nullable = false)
    public String getActionTitle() {
        return this.actionTitle;
    }

    public void setActionTitle(String actionTitle) {
        this.actionTitle = actionTitle;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "active_from", length = 29)
    public Date getActiveFrom() {
        return this.activeFrom;
    }

    public void setActiveFrom(Date activeFrom) {
        this.activeFrom = activeFrom;
    }

    @Column(name = "uom")
    public String getUom() {
        return this.uom;
    }

    public void setUom(String uom) {
        this.uom = uom;
    }

    @Column(name = "action_status")
    public Short getActionStatus() {
        return this.actionStatus;
    }

    public void setActionStatus(Short actionStatus) {
        this.actionStatus = actionStatus;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "actions")
    public ActionsTrans getActionsTrans() {
        return this.actionsTrans;
    }

    public void setActionsTrans(ActionsTrans actionsTrans) {
        this.actionsTrans = actionsTrans;
    }

}
